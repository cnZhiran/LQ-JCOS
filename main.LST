C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <intrins.h>
   3          #include <onewire.h>
   4          
   5          #ifndef u8
   6          #define u8 unsigned char
   7          #endif
   8          
   9          #ifndef u16
  10          #define u16 unsigned int
  11          #endif
  12          
  13          #ifndef u32
  14          #define u32 unsigned long
  15          #endif
  16          
  17          sbit Trig = P1^0;
  18          sbit Echo = P1^1;
  19          
  20          u8 code font[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  21          u8 code y4=0x80,y5=0xa0,y6=0xc0,y7=0xe0;
  22          
  23          bit temp_flag=0,len_flag=0,break_flag=0,echo_flag=0,tx_flag=0;
  24          bit temp_mod=0;len_mod=1;
  25          u8 dis[8]={0},tx_buf[16]="\0",rx_buf[16]="\0";
  26          u8 key_flag=0,key_sign=0,tx_pot=0,rx_pot=0;
  27          u16 temp_timing=0,len_timing=250;
  28          u16 count=0,len=20,key_count=0;
  29          int temp=20;
  30          
  31          void mod_init();
  32          void mod_ctrl();
  33          void read_temp();
  34          void read_len();
  35          u8 scankey();
  36          void dis_smg();
  37          
  38          /*************************************************
  39          *函数：mod_init()系统模式初始化函数
  40          *功能：系统模式初始化
  41          *************************************************/
  42          void mod_init(){
  43   1              if(temp_mod){
  44   2                      dis[0]=0xc6;
  45   2                      dis[1]=0xff;
  46   2                      dis[2]=0xff;
  47   2                      dis[3]=0xff;
  48   2                      return;
  49   2              }
  50   1              if(len_mod){
  51   2                      dis[0]=0xc7;
  52   2                      dis[1]=0xff;
  53   2                      dis[2]=0xff;
  54   2                      return;
  55   2              }
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 2   

  56   1      }
  57          /*************************************************
  58          *函数：Sysclk_init()系统计时初始化函数
  59          *功能：系统计时初始化
  60          *硬件：使用T2定时器，规定1ms溢出中断一次
  61          *************************************************/
  62          void Sysclk_init(){
  63   1              AUXR |= 0x04;           //定时器2时钟1T模式
  64   1              T2L = 0x20;                     //设置定时初值
  65   1              T2H = 0xD1;                     //设置定时初值
  66   1          IE2 |= 0x04;                //开定时器2中断
  67   1          EA = 1;
  68   1              AUXR |= 0x10;           //定时器2开始计时
  69   1      }
  70          /*************************************************
  71          *函数：PCA_init()PCA定时器初始化函数
  72          *功能：PCA定时器初始化                   
  73          *硬件：使用PCA定时器，规定溢出和P11下降沿中断
  74          *************************************************/
  75          void PCA_init(){
  76   1              P_SW1 &= 0xcf;          //(P1.2/ECI, P1.1/CCP0, P1.0/CCP1, P3.7/CCP2)
  77   1          CCON = 0;                       //初始化PCA控制寄存器
  78   1                                          //PCA定时器停止
  79   1                                          //清除CF标志
  80   1                                          //清除模块中断标志
  81   1          CL = 0;                         //复位PCA寄存器
  82   1          CH = 0;
  83   1          CCAP0L = 0;
  84   1          CCAP0H = 0;
  85   1          CMOD = 0x01;                    //设置PCA时钟源为系统时钟/12,且使能PCA计时溢出中断
  86   1          CCAPM0 = 0x10;                                      //PCA模块0为16位捕获模式(下降沿捕获,可测从低电平开始的整个周期)
  87   1              
  88   1          EA = 1;
  89   1      
  90   1      }
  91          /*************************************************
  92          *函数：Uart_init()串口初始化函数
  93          *功能：串口初始化 
  94          *硬件：使用T1定时器，波特率为4800
  95          *************************************************/
  96          void Uart_init(void)            //4800bps@12.000MHz
  97          {
  98   1              SCON = 0x50;            //8位数据,可变波特率
  99   1              AUXR |= 0x40;           //定时器1时钟为Fosc,即1T
 100   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
 101   1              TMOD &= 0x0F;           //设定定时器1为16位自动重装方式
 102   1              TL1 = 0x8F;                     //设定定时初值
 103   1              TH1 = 0xFD;                     //设定定时初值
 104   1              ET1 = 0;                        //禁止定时器1中断
 105   1              TR1 = 1;                        //启动定时器1
 106   1      }
 107          /*************************************************
 108          *函数：delay_us()微秒级延时函数
 109          *功能：微秒级延时服务
 110          *备注：尽可能的使用STC-ISP的延时计算器，提高延时精度
 111          *************************************************/
 112          void delay100us()               //@12.000MHz
 113          {
 114   1              unsigned char i, j;
 115   1      
 116   1              i = 2;
 117   1              j = 39;
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 3   

 118   1              do
 119   1              {
 120   2                      while (--j);
 121   2              } while (--i);
 122   1      }
 123          void delay12us()                //@12.000MHz
 124          {
 125   1              unsigned char i;
 126   1      
 127   1              _nop_();
 128   1              _nop_();
 129   1              i = 33;
 130   1              while (--i);
 131   1      }
 132          /*************************************************
 133          *函数：init()初始化函数
 134          *功能：系统进入的初始化服务
 135          *************************************************/
 136          void init(){
 137   1              mod_init();
 138   1              Trig = 0;
 139   1              Echo = 1;
 140   1              PCA_init();
 141   1              Sysclk_init();
 142   1              Uart_init();
 143   1      }
 144          /*************************************************
 145          *函数：loop()快速响应函数
 146          *功能：快速I/O设备的驱动服务，模式变换服务
 147          *备注：要求函数进行一次的时长要尽可能的短，这样不会影响其他函数的延时等待函数。
 148          *************************************************/
 149          void loop(){
 150   1              key_sign=scankey();
 151   1              mod_ctrl();
 152   1              dis_smg();
 153   1      }
 154          /*************************************************
 155          *函数：soft_IT()中断捕获和处理函数
 156          *功能：中断捕获和处理服务
 157          *************************************************/
 158          void soft_IT(){
 159   1              
 160   1              if(temp_flag) read_temp();
 161   1              if(len_flag) read_len();
 162   1      }
 163          /*************************************************
 164          *函数：mod_ctrl()模式变换函数
 165          *功能：模式变换服务
 166          *************************************************/
 167          void mod_ctrl(){
 168   1              if(temp_mod){
 169   2                      if(key_sign==12){
 170   3                              temp_mod=0;
 171   3                              len_mod=1;
 172   3                              dis[0]=0xc7;
 173   3                              dis[1]=0xff;
 174   3                              dis[2]=0xff;
 175   3                              if(count==0){
 176   4                                      dis[3]=font[9];
 177   4                                      dis[4]=font[9];
 178   4                                      dis[5]=font[9];
 179   4                                      dis[6]=font[9]&0x7f;
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 4   

 180   4                                      dis[7]=font[9];
 181   4                              }else{
 182   4                                      len=count*0.17;
 183   4                                      dis[3]=font[len/10000];
 184   4                                      dis[4]=font[len/1000%10];
 185   4                                      dis[5]=font[len/100%10];
 186   4                                      dis[6]=font[len/10%10]&0x7f;
 187   4                                      dis[7]=font[len%10];
 188   4                              }
 189   3                              return;
 190   3                      }
 191   2              }
 192   1              if(len_mod){
 193   2                      if(key_sign==12){          
 194   3                              len_mod=0;
 195   3                              temp_mod=1;
 196   3                              dis[0]=0xc6;
 197   3                              dis[1]=0xff;
 198   3                              dis[2]=0xff;
 199   3                              dis[3]=0xff;
 200   3                              dis[4]=font[temp/1000%10];
 201   3                              dis[5]=font[temp/100%10]&0x7f;
 202   3                              dis[6]=font[temp/10%10];
 203   3                              dis[7]=font[temp%10];
 204   3                              return;
 205   3                      }
 206   2              }
 207   1      }
 208          /*************************************************
 209          *函数：read_temp()读温度函数
 210          *功能：读取温度
 211          *************************************************/
 212          void read_temp(){
 213   1              int tp;
 214   1              u8 tl,th;
 215   1      
 216   1              while(init_ds18b20())loop();
 217   1              Write_DS18B20(0xCC);
 218   1              Write_DS18B20(0x44);
 219   1              while(init_ds18b20())loop();
 220   1              Write_DS18B20(0xCC);
 221   1              Write_DS18B20(0xBE);
 222   1              tl=Read_DS18B20();
 223   1              th=Read_DS18B20();
 224   1              tp=(th<<8)|tl;
 225   1              temp=tp*6.25;
 226   1      
 227   1              if(temp_mod){
 228   2                      dis[4]=font[temp/1000%10];
 229   2                      dis[5]=font[temp/100%10]&0x7f;
 230   2                      dis[6]=font[temp/10%10];
 231   2                      dis[7]=font[temp%10];
 232   2              }
 233   1              temp_flag=0;
 234   1      }       
 235          /*************************************************
 236          *函数：read_len()读距离函数
 237          *功能：读取距离
 238          *************************************************/
 239          void read_len(){
 240   1              u8 i=8;
 241   1                                
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 5   

 242   1              //发送
 243   1              while(i--){
 244   2                      Trig = 1;
 245   2                      delay12us();
 246   2                      Trig = 0;
 247   2                      delay12us();
 248   2              }
 249   1              //接收
 250   1          CR = 1;                         //PCA定时器开始工作
 251   1          CCF0 = 0;
 252   1              CCAPM0 |= 0x01;                                 //开启中断
 253   1              while(echo_flag!=0&&break_flag!=0)loop();
 254   1              if(len_mod){
 255   2                      if(break_flag){
 256   3                              dis[3]=font[9];
 257   3                              dis[4]=font[9];
 258   3                              dis[5]=font[9];
 259   3                              dis[6]=font[9]&0x7f;
 260   3                              dis[7]=font[9];
 261   3                      }else{
 262   3                              len=count*0.17;
 263   3                              dis[3]=font[len/10000];
 264   3                              dis[4]=font[len/1000%10];
 265   3                              dis[5]=font[len/100%10];
 266   3                              dis[6]=font[len/10%10]&0x7f;
 267   3                              dis[7]=font[len%10];
 268   3                      }
 269   2              }
 270   1              break_flag = 0;
 271   1              echo_flag = 0;
 272   1              len_flag = 0;
 273   1      }
 274          /*************************************************
 275          *函数：scankey()扫描按键函数
 276          *功能：扫描按键
 277          *************************************************/
 278          u8 scankey(){
 279   1              u8 key;
 280   1      
 281   1              P3=0xff;P3&=0xf3;
 282   1              if(P34==0|P35==0){
 283   2                      delay100us();
 284   2                      if(P34==0|P35==0){
 285   3                              key = P3 &0x30;
 286   3                              if(key_count==0){
 287   4                                      key_count = 1;
 288   4                                      P3=0xff;P3&=0xcf;
 289   4                                      delay12us();
 290   4                                      key |= P3 &0x0c;
 291   4                                      switch(key){
 292   5                                              case 0x14:key_flag=12;return 0;
 293   5                                              case 0x18:key_flag=13;return 0;
 294   5                                              case 0x24:key_flag=16;return 0;
 295   5                                              case 0x28:key_flag=17;return 0;
 296   5                                      }
 297   4                              }
 298   3                              return 0;
 299   3                      }       
 300   2              }
 301   1              if(key_count){
 302   2                      if(key_count<1000){
 303   3                              key_count=0;
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 6   

 304   3                              return key_flag;
 305   3                      }else{
 306   3                              key_count=0;
 307   3                              return key_flag+10;
 308   3                      }
 309   2              }
 310   1              return 0;
 311   1      }
 312          /*************************************************
 313          *函数：dis_smg()数码管显示函数
 314          *功能：驱动显示数码管
 315          *************************************************/
 316          void dis_smg(){
 317   1              u8 i;
 318   1      
 319   1              for(i=0;i<8;i++){
 320   2                      P2&=0x1f;
 321   2                      P0=1<<i;
 322   2                      P2|=y6;
 323   2                      _nop_();
 324   2                      P2&=0x1f;
 325   2                      P0=dis[i];
 326   2                      P2|=y7;
 327   2                      delay100us();
 328   2                      P0=0xff;
 329   2              }
 330   1      }
 331          /*************************************************
 332          *函数：main()系统进入函数
 333          *功能：系统进入初始化服务，系统进行服务
 334          *************************************************/
 335          void main(){
 336   1              //初始化
 337   1              init();
 338   1              while(1){
 339   2                      //快速I/O操作
 340   2                      loop();
 341   2                      //中断检查与处理
 342   2                      soft_IT();
 343   2              }       
 344   1      }
 345          /*************************************************
 346          *函数：Uart()串口中断处理函数
 347          *功能：软件中断标志的定时置位服务，毫秒级的计时计数服务
 348          *硬件：使用T2定时器，规定1ms溢出中断一次
 349          *************************************************/
 350          void Uart() interrupt 4 using 2
 351          {
 352   1          if (RI)
 353   1          {
 354   2              RI = 0;                 //清除RI位
 355   2              rx_buf[rx_pot] = SBUF;//存串口数据
 356   2                      if(rx_buf[rx_pot]=='\n'){
 357   3                              rx_pot=0;
 358   3                      }else{
 359   3                              rx_pot++;
 360   3                      }
 361   2          }
 362   1          if (TI)
 363   1          {
 364   2              TI = 0;                 //清除TI位
 365   2              if(tx_buf[tx_pot]){
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 7   

 366   3                      SBUF = tx_buf[tx_pot++];                 //写数据到UART数据寄存器
 367   3                      }else{
 368   3                              tx_flag = 0;
 369   3                      }
 370   2          }
 371   1      }
 372          /*************************************************
 373          *函数：PCA_isr()PCA定时器中断处理函数
 374          *功能：脉冲时长计数服务
 375          *硬件：使用PCA定时器，规定溢出和P11下降沿中断
 376          *输出：count记录从定时器打开到下降沿之前的时长计数
 377          *************************************************/
 378          void PCA_isr() interrupt 7 using 3
 379          {       
 380   1          if (CF)
 381   1          {
 382   2              CF = 0;                                         //定时器溢出中断
 383   2              break_flag=1;
 384   2          }
 385   1          if (CCF0)
 386   1          {
 387   2                      CCF0 = 0;
 388   2                      echo_flag = 1;
 389   2                      count=(CCAP0H<<8)|CCAP0L;       //保存本次的捕获值
 390   2                      CCAPM0 &= 0xfe;                         //关闭中断
 391   2              CR = 0;                                         //PCA定时器停止工作
 392   2                      CL = 0;                     //复位PCA寄存器
 393   2                      CH = 0;
 394   2                      CCAP0L = 0;
 395   2                      CCAP0H = 0;
 396   2                      
 397   2          }
 398   1      }
 399          /*************************************************
 400          *函数：Sysclk_IT()系统定时中断处理函数
 401          *功能：软件中断标志的定时置位服务，毫秒级的计时计数服务
 402          *硬件：使用T2定时器，规定1ms溢出中断一次
 403          *************************************************/
 404          void Sysclk_IT() interrupt 12 using 3
 405          {
 406   1              //18B20定时读取
 407   1              if(temp_timing){
 408   2                      temp_timing--;
 409   2              }else{
 410   2                      temp_timing=500;
 411   2                      temp_flag=1;
 412   2              }
 413   1              //超声波定时读取
 414   1              if(len_timing){
 415   2                      len_timing--;
 416   2              }else{
 417   2                      len_timing=1000;
 418   2                      len_flag=1;
 419   2              }
 420   1              //按键时长计数
 421   1              if(key_count){
 422   2                      if(++key_count==0)key_count=1000;
 423   2              }
 424   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.00   MAIN                                                                  11/16/2019 21:25:40 PAGE 8   

   CODE SIZE        =   1405    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     58       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
